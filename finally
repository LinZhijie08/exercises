from functools import reduce#2
import random#5
from functools import partial#7
import time#8


1.
    def triple(lst):
        return [i*i*i for i in lst]
    print(triple([1,2,3,4,5,6,7,8,9]))




2.
    def add(lst):
        return reduce(lambda x,y:x+y,lst)
    print(add(lst))




3.
    def reader():
        f=''
        for i in range(10001):
            f+=str(i)
            f+="\n"
        with open("test.txt",'w+') as ff:
            ff.write(f)
        with open("test.txt") as f:
            while 1:
                aa=f.readline()
                yield aa
    a=reader()
    for i in range(int(input())):
        print(next(a),end="")




4.
    def han_null(n):
        return n==False
    def has_null_value(lst):
        return list(filter(han_null,lst))
    print(has_null_value([0,False,'0',8,0.0,[]]))




5.
    def fib(a):
        return 1 if(a<=2) else (fib(a-1)+fib(a-2))
    a=int(input())
    for i in range(1,11):
        if fib(i)<a:
            print(fib(i))
        else:
            break



6.
       import random
    import string

    user_list = []

    def login():
        User_name = input("请您设置您的用户名：")
        User_password = int(input("请您设置您想取几位数的密码："))

        for i in range(User_password):
            Your_pass = random.choice(string.ascii_letters + string.digits)
            user_list.append(Your_pass)
            Pass_result = "".join(user_list)

        print(f"您设置的用户名为：{User_name}, 系统为您随机产生的密码为：{Pass_result}")

    login()



7.
    def mul_by_two(n):
        f=partial(lambda x,y:x*y,2)
        return f(n)
    print(mul_by_two(100))




8.
        import time

        def do(func):
            def wapper(*args,**kwargs):
                start_time = time.time()
                rs = func(*args,**kwargs)
                ent_time = time.time()
                print("总共耗时为：", ent_time - start_time)
                return rs
            return wapper

        @do
        def add(x,y):
            for i in range(10000):
                print(i)
            return x + y

        print(add(1,2))
